size_of_grid: integer
a: integer
b: integer
count: integer
arr: 2D array of size 128 x 128
place(x1, y1, x2, y2, x3, y3)
  count++
  arr[x1][y1] = count
  arr[x2][y2] = count
  arr[x3][y3] = count
tile(n, x, y)
  if n == 2
    count++
    for i = 0 to 1
      for j = 0 to 1
        if arr[x + i][y + j] == 0
          arr[x + i][y + j] = count
    return
  r = 0
  c = 0
  for i = x to x + n - 1
    for j = y to y + n - 1
      if arr[i][j] != 0
        r = i
        c = j
        break
      break

  if r < x + n // 2 and c < y + n // 2
    place(x + n // 2, y + n // 2 - 1, x + n // 2, y + n // 2, x + n // 2 - 1, y + n // 2)
  else if r >= x + n // 2 and c < y + n // 2
    place(x + n // 2 - 1, y + n // 2, x + n // 2, y + n // 2, x + n // 2 - 1, y + n // 2 - 1)
  else if r < x + n // 2 and c >= y + n // 2
    place(x + n // 2, y + n // 2 - 1, x + n // 2, y + n // 2, x + n // 2 - 1, y + n // 2 - 1)
  else
    place(x + n // 2 - 1, y + n // 2, x + n // 2, y + n // 2 - 1, x + n // 2 - 1, y + n // 2 - 1)

  tile(n // 2, x, y)
  tile(n // 2, x, y + n // 2)
  tile(n // 2, x + n // 2, y)
  tile(n // 2, x + n // 2, y + n // 2)

   return 0

size_of_grid: 4
a: 2
b: 0
arr[a][b] = "*"
tile(size_of_grid, 0, 0)

n = size_of_grid
size = ((n * n) - 1) // 3
result = create_array(size)

counter = 0
for i = 0 to size_of_grid - 1
  for j = 0 to size_of_grid - 1
    counter++
    for k = 0 to size + 1
      if arr[i][j] == k
        result[k - 1].append(counter)

    print(arr[i][j], end=" ")
  print()

for i = 0 to length(result) - 1
  print("t" + str(i + 1) + ": " + str(result[i]))
